#!/bin/sh

DPATH_MUSIC="${DPATH_MUSIC-"$HOME/Music"}"
DPATH_PIMP_MPV_CFG="$(dirname "$(realpath "$0")")/etc/mpv"
FPATH_PIMP_PLAYLIST="${FPATH_PIMP_PLAYLIST-"$HOME/.cache/pimp.playlist"}"

export DPATH_MUSIC
export FPATH_PIMP_PLAYLIST

check_prerequisites()
{
	software='espeak ffplay mpv'
	result=0

	printf '%s' "$software" | sed 's/$/\n/g' | sed 's/ /\n/g' | \
	while read -r i
	do
		if ! which "$i" > /dev/null 2>&1
		then
			result=1
			printf 'pimp: prerequisite "%s" not found\n' "$i" >&2
		fi
	done

	if ! [ -d "$DPATH_MUSIC" ]
	then
		result=1
		printf 'pimp: music directory not found: %s\n' "$DPATH_MUSIC" >&2
	fi

	return "$result"
}

create_list()
{
	# description: generates recursive file list of specified directory
	#              and saves output as playlist file.
	
	if [ -d "$*" ]
	then
		dpath_full="$(realpath "$*")"
		find -L "$dpath_full" -type f | sort > "$FPATH_PIMP_PLAYLIST"
	fi
}

item_play()
{
	# description: plays playlist file.

	pkill espeak
	pkill ffplay

	for i in "$@"
	do
		create_list "$i"
		break
	done

	if [ -f "$FPATH_PIMP_PLAYLIST" ]
	then
		clear
		printf 'PiMP: initiating the slap... (⌐■_■)\n\n'

		if [ -d "$DPATH_PIMP_MPV_CFG" ]
		then
			# warning: does not like whitespaces in path
			mpv_arg_cfgdir="--config-dir=\"$DPATH_PIMP_MPV_CFG\""
		else
			mpv_arg_cfgdir=""
		fi

		item_sound play

		mpv \
			--shuffle \
			--no-audio-display \
			--no-video \
			--loop-playlist=inf \
			--loop-file=no \
			--display-tags= \
			--audio-pitch-correction=no --af-add=scaletempo=speed=both \
			--playlist="$FPATH_PIMP_PLAYLIST" "$mpv_arg_cfgdir" \
			"$@"
	else
		printf 'pimp: cannot find %s\n' "$FPATH_PIMP_PLAYLIST" >&2
		return 1
	fi
}

item_sound()
{
	# description: produces sound effects for auditory guidance /
	#              navigation.

	case "$@" in
		select)
			ffplay -f lavfi -i 'sine=frequency=2000:duration=0.025' \
				-autoexit -nodisp > /dev/null 2>&1
			;;
		play)
			ffplay -f lavfi -i 'sine=frequency=1000:duration=0.025' \
				-autoexit -nodisp > /dev/null 2>&1
			;;
		*)
			ffplay -f lavfi -i 'sine=frequency=2000:duration=0.025' \
				-autoexit -nodisp > /dev/null 2>&1
			;;
	esac
}

list_dirs()
{
	clear
	find -L "$DPATH_MUSIC" -type d -printf '%P\n' | sort -r | sed '/^$/d' | sed '$a.' | fzf -i -s -m -e \
		--header='PiMP (⌐■_■)' \
		--header-first \
		--border=rounded \
		--color=fg:7,bg:0,fg+:0,bg+:10,hl:9,hl+:1,border:10,gutter:0,header:10,prompt:7,info:10 \
		--prompt '> ' \
		--algo=v1 \
		--literal \
		--cycle \
		--tac \
		--no-mouse \
		--header-lines=0 \
		--layout=reverse \
		--preview '(printf "%s" {} | sed "s/\//, /g" | espeak -a 250 -s 300 && ffplay -f lavfi -i "sine=frequency=2000:duration=0.025" -nodisp -autoexit)' \
		--preview-window 0% \
		--bind "enter:execute(pimp play {} && pimp play-sound select)" \
		--bind 'change:first' \
		--bind 'backward-eof:execute-silent(printf clear | espeak -a 250 -s 300)' \
		--bind 'bspace:clear-query' \
		--bind 'home:first' \
		--bind 'end:last' \
		--bind 'insert:abort' \
		--bind 'alt-q:abort' \
		--bind 'ctrl-q:abort' \
		--bind 'tab:abort'
}

list_filter()
{
	modtime_pimp_list_pre="$(stat --format '%Y' "$FPATH_PIMP_PLAYLIST")"

	item_sound select

	clear
	find -L "$DPATH_MUSIC" -type f -printf '%P\n' | sort -r | sed '/^$/d' | fzf -i -s -m -e \
		--header='PiMP (⌐■_■)' \
		--header-first \
		--border=rounded \
		--color=fg+:0,bg+:10,hl:9,hl+:1,border:10,gutter:0,header:10,prompt:7,info:10 \
		--prompt '> ' \
		--algo=v1 \
		--literal \
		--cycle \
		--tac \
		--no-mouse \
		--header-lines=0 \
		--layout=reverse \
		--bind 'enter:select-all+accept+execute(rm -f "$FPATH_PIMP_PLAYLIST")' \
		--bind 'change:first' \
		--bind 'backward-eof:execute-silent(printf clear | espeak -a 250 -s 300)' \
		--bind 'home:first' \
		--bind 'end:last' \
		--bind 'insert:abort' \
		--bind 'alt-q:abort' \
		--bind 'ctrl-q:abort' \
		--bind 'tab:abort' | \
	while read -r f
	do
		printf '%s/%s\n' "$DPATH_MUSIC" "$f" >> "$FPATH_PIMP_PLAYLIST"
		continue
	done

	modtime_pimp_list_post="$(stat --format '%Y' "$FPATH_PIMP_PLAYLIST")"

	if [ "$modtime_pimp_list_post" != "$modtime_pimp_list_pre" ]
	then
		item_play
	fi
}

mkdir "$(dirname "$FPATH_PIMP_PLAYLIST")" > /dev/null 2>&1

if ! check_prerequisites
then
	exit 1
fi

case "$1" in
	dirs|-d)
		list_dirs
		exit
		;;
	
	filter|-f)
		list_filter
		exit
		;;

	play|slap|-p)
		item_play "$2"
		exit $?
		;;

	play-sound)
		item_sound "$2" 
		exit 
		;;
	
	*)
		if [ -f "$FPATH_PIMP_PLAYLIST" ]
		then
			item_play
		fi

		list_dirs
		exit
		;;
esac
